pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonarqube-scanner'
    }
    tools{
        jdk 'OpenJDK-11'
        maven 'maven3'
    }

    stages {
        stage('SCM') {
            steps {
                git branch: 'main', changelog: false, credentialsId: 'git', poll: false, url: 'https://github.com/spring-projects/spring-petclinic.git'
            }
        }
          stage('Compile') {
            steps {
                echo 'mvn clean compile'
            }
        }
          stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
        sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Petclinic \
        -Dsonar.java.binaries=. \
        -Dsonar.projectKey=ASDfgh@123 '''
                }
            } 
        stage('build') {
            steps {
                echo 'mvn clean install'
            }
        }
        stage('Deploy to Tomcat') {
            steps {
                sh "cp /var/lib/jenkins/workspace/pipeline/target/petclinic.war /opt/apache-tomcat-9.0.65/webapps"
            }
        }
    }
}
